import { RefObject } from "react";
/** @public */
export interface Point {
    x: number;
    y: number;
}
/** @public */
export declare namespace Point {
    /** @beta */
    const subtract: (a: Point, b: Point) => Point;
    /** @beta */
    const relativeTo: (idOrElem: string | HTMLElement) => ({ x, y }: Point) => Point | undefined;
}
/** @public */
export interface EventInfo {
    point: Point;
}
export declare type EventHandler = (event: MouseEvent | TouchEvent | PointerEvent, info: EventInfo) => void;
export declare type ListenerControls = [() => void, () => void];
export declare type TargetOrRef = EventTarget | RefObject<EventTarget>;
export declare type TargetBasedReturnType<Target> = Target extends EventTarget ? ListenerControls : undefined;
