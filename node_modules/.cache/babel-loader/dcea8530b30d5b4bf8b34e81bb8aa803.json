{"ast":null,"code":"import { __assign, __spreadArrays, __rest } from 'tslib';\nimport { warning, invariant } from 'hey-listen';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nvar clamp = function (min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\n\nfunction findSpring(_a) {\n  var _b = _a.duration,\n      duration = _b === void 0 ? 800 : _b,\n      _c = _a.bounce,\n      bounce = _c === void 0 ? 0.25 : _c,\n      _d = _a.velocity,\n      velocity = _d === void 0 ? 0 : _d,\n      _e = _a.mass,\n      mass = _e === void 0 ? 1 : _e;\n  var envelope;\n  var derivative;\n  warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n  var dampingRatio = 1 - bounce;\n  dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n  duration = clamp(minDuration, maxDuration, duration / 1000);\n\n  if (dampingRatio < 1) {\n    envelope = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var a = exponentialDecay - velocity;\n      var b = calcAngularFreq(undampedFreq, dampingRatio);\n      var c = Math.exp(-delta);\n      return safeMin - a / b * c;\n    };\n\n    derivative = function (undampedFreq) {\n      var exponentialDecay = undampedFreq * dampingRatio;\n      var delta = exponentialDecay * duration;\n      var d = delta * velocity + velocity;\n      var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n      var f = Math.exp(-delta);\n      var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n      var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n      return factor * ((d - e) * f) / g;\n    };\n  } else {\n    envelope = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (undampedFreq - velocity) * duration + 1;\n      return -safeMin + a * b;\n    };\n\n    derivative = function (undampedFreq) {\n      var a = Math.exp(-undampedFreq * duration);\n      var b = (velocity - undampedFreq) * (duration * duration);\n      return a * b;\n    };\n  }\n\n  var initialGuess = 5 / duration;\n  var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n\n  if (isNaN(undampedFreq)) {\n    return {\n      stiffness: 100,\n      damping: 10\n    };\n  } else {\n    var stiffness = Math.pow(undampedFreq, 2) * mass;\n    return {\n      stiffness: stiffness,\n      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness)\n    };\n  }\n}\n\nvar rootIterations = 12;\n\nfunction approximateRoot(envelope, derivative, initialGuess) {\n  var result = initialGuess;\n\n  for (var i = 1; i < rootIterations; i++) {\n    result = result - envelope(result) / derivative(result);\n  }\n\n  return result;\n}\n\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nfunction spring(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0.0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1.0 : _c,\n      _d = _a.velocity,\n      velocity = _d === void 0 ? 0.0 : _d,\n      _e = _a.stiffness,\n      stiffness = _e === void 0 ? 100 : _e,\n      _f = _a.damping,\n      damping = _f === void 0 ? 10 : _f,\n      _g = _a.mass,\n      mass = _g === void 0 ? 1.0 : _g,\n      _h = _a.restSpeed,\n      restSpeed = _h === void 0 ? 2 : _h,\n      restDelta = _a.restDelta,\n      duration = _a.duration,\n      bounce = _a.bounce;\n  var isResolvedFromDuration = false;\n  var state = {\n    done: false,\n    value: from\n  };\n\n  if (duration !== undefined || bounce !== undefined) {\n    isResolvedFromDuration = true;\n    var derived = findSpring({\n      duration: duration,\n      bounce: bounce\n    });\n    stiffness = derived.stiffness;\n    damping = derived.damping;\n    velocity = 0.0;\n    mass = 1.0;\n  }\n\n  var resolveSpring = zero;\n  var resolveVelocity = zero;\n\n  function createSpring() {\n    var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    var initialDelta = to - from;\n    var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n\n    if (dampingRatio < 1) {\n      var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n      };\n\n      resolveVelocity = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n      };\n    } else if (dampingRatio === 1) {\n      resolveSpring = function (t) {\n        return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n      };\n    } else {\n      var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n\n      resolveSpring = function (t) {\n        var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n        var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n        return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n      };\n    }\n  }\n\n  createSpring();\n  return {\n    next: function (t) {\n      var current = resolveSpring(t);\n\n      if (!isResolvedFromDuration) {\n        var currentVelocity = resolveVelocity(t) * 1000;\n        var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n      } else {\n        state.done = t >= duration;\n      }\n\n      state.value = state.done ? to : current;\n      return state;\n    },\n    flipTarget: function () {\n      var _a;\n\n      velocity = -velocity;\n      _a = [to, from], from = _a[0], to = _a[1];\n      createSpring();\n    }\n  };\n}\n\nspring.needsInterpolation = function (a, b) {\n  return typeof a === \"string\" || typeof b === \"string\";\n};\n\nvar zero = function (_t) {\n  return 0;\n};\n\nvar progress = function (from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n  return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\n\nvar colorTypes = [hex, rgba, hsla];\n\nvar getColorType = function (v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\n\nvar notAnimatable = function (color) {\n  return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\n\nvar mixColor = function (from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  invariant(!!fromColorType, notAnimatable(from));\n  invariant(!!toColorType, notAnimatable(to));\n  invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n\n  var blended = __assign({}, fromColor);\n\n  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== 'alpha') {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\n\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\nvar isNum = function (v) {\n  return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\n\nvar pipe = function () {\n  var transformers = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n\n  return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\n\nvar mixArray = function (from, to) {\n  var output = __spreadArrays(from);\n\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n\n    return output;\n  };\n};\n\nvar mixObject = function (origin, target) {\n  var output = __assign(__assign({}, origin), target);\n\n  var blendValue = {};\n\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n\n    return output;\n  };\n};\n\nfunction analyse(value) {\n  var parsed = complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === 'number') {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\n\nvar mixComplex = function (origin, target) {\n  var template = complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\n\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\n\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n\n    mixers.push(mixer);\n  }\n\n  return mixers;\n}\n\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n      to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\n\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n\n    if (!foundMixerIndex) {\n      var i = 1;\n\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n\n      mixerIndex = i - 1;\n    }\n\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\n\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.clamp,\n      isClamp = _c === void 0 ? true : _c,\n      ease = _b.ease,\n      mixer = _b.mixer;\n\n  var inputLength = input.length;\n  invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return isClamp ? function (v) {\n    return interpolator(clamp(input[0], input[inputLength - 1], v));\n  } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\n\nvar mirrorEasing = function (easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\n\nvar createExpoIn = function (power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\n\nvar createBackIn = function (power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\n\nvar createAnticipate = function (power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\n\nvar linear = function (p) {\n  return p;\n};\n\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\n\nvar circIn = function (p) {\n  return 1 - Math.sin(Math.acos(p));\n};\n\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\n\nvar bounceOut = function (p) {\n  if (p === 1 || p === 0) return p;\n  var p2 = p * p;\n  return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\n\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\n\nvar bounceInOut = function (p) {\n  return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\n\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\n\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\n\nfunction keyframes(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.to,\n      to = _c === void 0 ? 1 : _c,\n      ease = _a.ease,\n      offset = _a.offset,\n      _d = _a.duration,\n      duration = _d === void 0 ? 300 : _d;\n  var state = {\n    done: false,\n    value: from\n  };\n  var values = Array.isArray(to) ? to : [from, to];\n  var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n\n  var interpolator = createInterpolator();\n  return {\n    next: function (t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function () {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\n\nfunction decay(_a) {\n  var _b = _a.velocity,\n      velocity = _b === void 0 ? 0 : _b,\n      _c = _a.from,\n      from = _c === void 0 ? 0 : _c,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 350 : _e,\n      _f = _a.restDelta,\n      restDelta = _f === void 0 ? 0.5 : _f,\n      modifyTarget = _a.modifyTarget;\n  var state = {\n    done: false,\n    value: from\n  };\n  var amplitude = power * velocity;\n  var ideal = from + amplitude;\n  var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n  if (target !== ideal) amplitude = target - from;\n  return {\n    next: function (t) {\n      var delta = -amplitude * Math.exp(-t / timeConstant);\n      state.done = !(delta > restDelta || delta < -restDelta);\n      state.value = state.done ? target : target + delta;\n      return state;\n    },\n    flipTarget: function () {}\n  };\n}\n\nvar types = {\n  keyframes: keyframes,\n  spring: spring,\n  decay: decay\n};\n\nfunction detectAnimationFromOptions(config) {\n  if (Array.isArray(config.to)) {\n    return keyframes;\n  } else if (types[config.type]) {\n    return types[config.type];\n  }\n\n  var keys = new Set(Object.keys(config));\n\n  if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n    return keyframes;\n  } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n    return spring;\n  }\n\n  return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return elapsed - duration - delay;\n}\n\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (isForwardPlayback === void 0) {\n    isForwardPlayback = true;\n  }\n\n  return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\n\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n  return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n  var passTimestamp = function (_a) {\n    var delta = _a.delta;\n    return update(delta);\n  };\n\n  return {\n    start: function () {\n      return sync.update(passTimestamp, true, true);\n    },\n    stop: function () {\n      return cancelSync.update(passTimestamp);\n    }\n  };\n};\n\nfunction animate(_a) {\n  var _b, _c;\n\n  var from = _a.from,\n      _d = _a.autoplay,\n      autoplay = _d === void 0 ? true : _d,\n      _e = _a.driver,\n      driver = _e === void 0 ? framesync : _e,\n      _f = _a.elapsed,\n      elapsed = _f === void 0 ? 0 : _f,\n      _g = _a.repeat,\n      repeatMax = _g === void 0 ? 0 : _g,\n      _h = _a.repeatType,\n      repeatType = _h === void 0 ? \"loop\" : _h,\n      _j = _a.repeatDelay,\n      repeatDelay = _j === void 0 ? 0 : _j,\n      onPlay = _a.onPlay,\n      onStop = _a.onStop,\n      onComplete = _a.onComplete,\n      onRepeat = _a.onRepeat,\n      onUpdate = _a.onUpdate,\n      options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n\n  var to = options.to;\n  var driverControls;\n  var repeatCount = 0;\n  var computedDuration = options.duration;\n  var latest;\n  var isComplete = false;\n  var isForwardPlayback = true;\n  var interpolateFromNumber;\n  var animator = detectAnimationFromOptions(options);\n\n  if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n    interpolateFromNumber = interpolate([0, 100], [from, to], {\n      clamp: false\n    });\n    from = 0;\n    to = 100;\n  }\n\n  var animation = animator(__assign(__assign({}, options), {\n    from: from,\n    to: to\n  }));\n\n  function repeat() {\n    repeatCount++;\n\n    if (repeatType === \"reverse\") {\n      isForwardPlayback = repeatCount % 2 === 0;\n      elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n    } else {\n      elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n      if (repeatType === \"mirror\") animation.flipTarget();\n    }\n\n    isComplete = false;\n    onRepeat && onRepeat();\n  }\n\n  function complete() {\n    driverControls.stop();\n    onComplete && onComplete();\n  }\n\n  function update(delta) {\n    if (!isForwardPlayback) delta = -delta;\n    elapsed += delta;\n\n    if (!isComplete) {\n      var state = animation.next(Math.max(0, elapsed));\n      latest = state.value;\n      if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n      isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n    }\n\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n\n    if (isComplete) {\n      if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n\n      if (repeatCount < repeatMax) {\n        hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n      } else {\n        complete();\n      }\n    }\n  }\n\n  function play() {\n    onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n    driverControls = driver(update);\n    driverControls.start();\n  }\n\n  autoplay && play();\n  return {\n    stop: function () {\n      onStop === null || onStop === void 0 ? void 0 : onStop();\n      driverControls.stop();\n    }\n  };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n  var _b = _a.from,\n      from = _b === void 0 ? 0 : _b,\n      _c = _a.velocity,\n      velocity = _c === void 0 ? 0 : _c,\n      min = _a.min,\n      max = _a.max,\n      _d = _a.power,\n      power = _d === void 0 ? 0.8 : _d,\n      _e = _a.timeConstant,\n      timeConstant = _e === void 0 ? 750 : _e,\n      _f = _a.bounceStiffness,\n      bounceStiffness = _f === void 0 ? 500 : _f,\n      _g = _a.bounceDamping,\n      bounceDamping = _g === void 0 ? 10 : _g,\n      _h = _a.restDelta,\n      restDelta = _h === void 0 ? 1 : _h,\n      modifyTarget = _a.modifyTarget,\n      driver = _a.driver,\n      onUpdate = _a.onUpdate,\n      onComplete = _a.onComplete;\n  var currentAnimation;\n\n  function isOutOfBounds(v) {\n    return min !== undefined && v < min || max !== undefined && v > max;\n  }\n\n  function boundaryNearest(v) {\n    if (min === undefined) return max;\n    if (max === undefined) return min;\n    return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n  }\n\n  function startAnimation(options) {\n    currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    currentAnimation = animate(__assign(__assign({}, options), {\n      driver: driver,\n      onUpdate: function (v) {\n        var _a;\n\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n      },\n      onComplete: onComplete\n    }));\n  }\n\n  function startSpring(options) {\n    startAnimation(__assign({\n      type: \"spring\",\n      stiffness: bounceStiffness,\n      damping: bounceDamping,\n      restDelta: restDelta\n    }, options));\n  }\n\n  if (isOutOfBounds(from)) {\n    startSpring({\n      from: from,\n      velocity: velocity,\n      to: boundaryNearest(from)\n    });\n  } else {\n    var target = power * velocity + from;\n    if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n    var boundary_1 = boundaryNearest(target);\n    var heading_1 = boundary_1 === min ? -1 : 1;\n    var prev_1;\n    var current_1;\n\n    var checkBoundary = function (v) {\n      prev_1 = current_1;\n      current_1 = v;\n      velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n\n      if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n        startSpring({\n          from: v,\n          to: boundary_1,\n          velocity: velocity\n        });\n      }\n    };\n\n    startAnimation({\n      type: \"decay\",\n      from: from,\n      velocity: velocity,\n      timeConstant: timeConstant,\n      power: power,\n      restDelta: restDelta,\n      modifyTarget: modifyTarget,\n      onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n    });\n  }\n\n  return {\n    stop: function () {\n      return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n    }\n  };\n}\n\nvar radiansToDegrees = function (radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n  var hasReceivedFrom = true;\n\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\n\nvar identity = function (v) {\n  return v;\n};\n\nvar createAttractor = function (alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n\n  return function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  };\n};\n\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n  return Math.abs(a - b);\n};\n\nfunction distance(a, b) {\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\n\nvar toDecimal = function (num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\n\nvar snap = function (points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n  return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n  return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\n\nvar b = function (a1, a2) {\n  return 3.0 * a2 - 6.0 * a1;\n};\n\nvar c = function (a1) {\n  return 3.0 * a1;\n};\n\nvar calcBezier = function (t, a1, a2) {\n  return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\n\nvar getSlope = function (t, a1, a2) {\n  return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\n\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\n\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX;\n  var currentT;\n  var i = 0;\n\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n\n  return currentT;\n}\n\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\n\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < newtonIterations; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n\n  return aGuessT;\n}\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n  if (mX1 === mY1 && mX2 === mY2) return linear;\n  var sampleValues = new Float32Array(kSplineTableSize);\n\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n\n    --currentSample;\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n\n    if (initialSlope >= newtonMinSlope) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function (t) {\n    return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n  };\n}\n\nvar steps = function (steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clamp(0, 1, rounded / steps);\n  };\n};\n\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };","map":{"version":3,"sources":["/Users/kushpanjabi/Desktop/👨🏽‍💻/After 5.2020/instaport/node_modules/popmotion/dist/popmotion.es.js"],"names":["__assign","__spreadArrays","__rest","warning","invariant","hex","rgba","hsla","complex","color","sync","cancelSync","getFrameData","clamp","min","max","v","Math","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","_a","_b","duration","_c","bounce","_d","velocity","_e","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","factor","initialGuess","approximateRoot","isNaN","stiffness","damping","sqrt","rootIterations","result","i","spring","from","to","_f","_g","_h","restSpeed","restDelta","isResolvedFromDuration","state","done","value","undefined","derived","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","abs","angularFreq_1","t","sin","cos","dampedAngularFreq_1","freqForT","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","progress","toFromDifference","mix","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","find","type","test","notAnimatable","mixColor","fromColorType","toColorType","transform","fromColor","parse","toColor","blended","mixFunc","key","alpha","zeroPoint","x","y","z","isNum","combineFunctions","pipe","transformers","_i","arguments","length","reduce","getMixer","origin","target","mixComplex","mixArray","output","numValues","blendValue","map","fromThis","mixObject","analyse","parsed","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","mixNumber","p","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","isClamp","concat","reverse","interpolator","reverseEasing","easing","mirrorEasing","createExpoIn","power","createBackIn","createAnticipate","backEasing","DEFAULT_OVERSHOOT_STRENGTH","BOUNCE_FIRST_THRESHOLD","BOUNCE_SECOND_THRESHOLD","BOUNCE_THIRD_THRESHOLD","linear","easeIn","easeOut","easeInOut","circIn","acos","circOut","circInOut","backIn","backOut","backInOut","anticipate","ca","cb","cc","bounceOut","p2","bounceIn","bounceInOut","defaultEasing","values","splice","defaultOffset","_value","convertOffsetToTimes","offset","o","keyframes","times","createInterpolator","decay","timeConstant","modifyTarget","amplitude","ideal","types","detectAnimationFromOptions","config","keys","Set","Object","has","loopElapsed","elapsed","delay","reverseElapsed","isForwardPlayback","hasRepeatDelayElapsed","framesync","update","passTimestamp","start","stop","animate","autoplay","driver","repeat","repeatMax","repeatType","_j","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","options","driverControls","repeatCount","computedDuration","latest","isComplete","interpolateFromNumber","animator","call","animation","complete","play","velocityPerSecond","frameDuration","inertia","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary_1","heading_1","prev_1","current_1","checkBoundary","radiansToDegrees","radians","PI","angle","atan2","applyOffset","hasReceivedFrom","identity","createAttractor","alterDisplacement","constant","displacement","springModifiedDisplacement","attract","attractExpo","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","distance","xDelta","yDelta","zDelta","pointFromVector","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","velocityPerFrame","xps","wrap","rangeSize","a1","a2","calcBezier","getSlope","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","newtonIterations","newtonMinSlope","newtonRaphsonIterate","aGuessT","currentSlope","kSplineTableSize","kSampleStepSize","cubicBezier","mY1","mY2","sampleValues","Float32Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","steps","direction","expanded","rounded","floor","ceil"],"mappings":"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","sourcesContent":["import { __assign, __spreadArrays, __rest } from 'tslib';\nimport { warning, invariant } from 'hey-listen';\nimport { hex, rgba, hsla, complex, color } from 'style-value-types';\nimport sync, { cancelSync, getFrameData } from 'framesync';\n\nvar clamp = function (min, max, v) {\n    return Math.min(Math.max(v, min), max);\n};\n\nvar safeMin = 0.001;\nvar minDuration = 0.01;\nvar maxDuration = 10.0;\nvar minDamping = 0.05;\nvar maxDamping = 1;\nfunction findSpring(_a) {\n    var _b = _a.duration,\n        duration = _b === void 0 ? 800 : _b,\n        _c = _a.bounce,\n        bounce = _c === void 0 ? 0.25 : _c,\n        _d = _a.velocity,\n        velocity = _d === void 0 ? 0 : _d,\n        _e = _a.mass,\n        mass = _e === void 0 ? 1 : _e;\n    var envelope;\n    var derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    var dampingRatio = 1 - bounce;\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        envelope = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var a = exponentialDecay - velocity;\n            var b = calcAngularFreq(undampedFreq, dampingRatio);\n            var c = Math.exp(-delta);\n            return safeMin - a / b * c;\n        };\n        derivative = function (undampedFreq) {\n            var exponentialDecay = undampedFreq * dampingRatio;\n            var delta = exponentialDecay * duration;\n            var d = delta * velocity + velocity;\n            var e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            var f = Math.exp(-delta);\n            var g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            var factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return factor * ((d - e) * f) / g;\n        };\n    } else {\n        envelope = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = function (undampedFreq) {\n            var a = Math.exp(-undampedFreq * duration);\n            var b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    var initialGuess = 5 / duration;\n    var undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10\n        };\n    } else {\n        var stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness: stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness)\n        };\n    }\n}\nvar rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    var result = initialGuess;\n    for (var i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nfunction spring(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0.0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1.0 : _c,\n        _d = _a.velocity,\n        velocity = _d === void 0 ? 0.0 : _d,\n        _e = _a.stiffness,\n        stiffness = _e === void 0 ? 100 : _e,\n        _f = _a.damping,\n        damping = _f === void 0 ? 10 : _f,\n        _g = _a.mass,\n        mass = _g === void 0 ? 1.0 : _g,\n        _h = _a.restSpeed,\n        restSpeed = _h === void 0 ? 2 : _h,\n        restDelta = _a.restDelta,\n        duration = _a.duration,\n        bounce = _a.bounce;\n    var isResolvedFromDuration = false;\n    var state = { done: false, value: from };\n    if (duration !== undefined || bounce !== undefined) {\n        isResolvedFromDuration = true;\n        var derived = findSpring({ duration: duration, bounce: bounce });\n        stiffness = derived.stiffness;\n        damping = derived.damping;\n        velocity = 0.0;\n        mass = 1.0;\n    }\n    var resolveSpring = zero;\n    var resolveVelocity = zero;\n    function createSpring() {\n        var initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        var initialDelta = to - from;\n        var dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        var undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        restDelta !== null && restDelta !== void 0 ? restDelta : restDelta = Math.abs(to - from) <= 1 ? 0.01 : 0.4;\n        if (dampingRatio < 1) {\n            var angularFreq_1 = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 * Math.sin(angularFreq_1 * t) + initialDelta * Math.cos(angularFreq_1 * t));\n            };\n            resolveVelocity = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq_1 + initialDelta * Math.cos(angularFreq_1 * t)) - envelope * (Math.cos(angularFreq_1 * t) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq_1 * initialDelta * Math.sin(angularFreq_1 * t));\n            };\n        } else if (dampingRatio === 1) {\n            resolveSpring = function (t) {\n                return to - Math.exp(-undampedAngularFreq * t) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t);\n            };\n        } else {\n            var dampedAngularFreq_1 = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = function (t) {\n                var envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                var freqForT = Math.min(dampedAngularFreq_1 * t, 300);\n                return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq_1 * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq_1;\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: function (t) {\n            var current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                var currentVelocity = resolveVelocity(t) * 1000;\n                var isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                var isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            } else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: function () {\n            var _a;\n            velocity = -velocity;\n            _a = [to, from], from = _a[0], to = _a[1];\n            createSpring();\n        }\n    };\n}\nspring.needsInterpolation = function (a, b) {\n    return typeof a === \"string\" || typeof b === \"string\";\n};\nvar zero = function (_t) {\n    return 0;\n};\n\nvar progress = function (from, to, value) {\n    var toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function (from, to, progress) {\n    return -progress * from + progress * to + from;\n};\n\nvar mixLinearColor = function (from, to, v) {\n    var fromExpo = from * from;\n    var toExpo = to * to;\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\nvar colorTypes = [hex, rgba, hsla];\nvar getColorType = function (v) {\n    return colorTypes.find(function (type) {\n        return type.test(v);\n    });\n};\nvar notAnimatable = function (color) {\n    return \"'\" + color + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\nvar mixColor = function (from, to) {\n    var fromColorType = getColorType(from);\n    var toColorType = getColorType(to);\n    invariant(!!fromColorType, notAnimatable(from));\n    invariant(!!toColorType, notAnimatable(to));\n    invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n    var fromColor = fromColorType.parse(from);\n    var toColor = toColorType.parse(to);\n    var blended = __assign({}, fromColor);\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n    return function (v) {\n        for (var key in blended) {\n            if (key !== 'alpha') {\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\n            }\n        }\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n        return fromColorType.transform(blended);\n    };\n};\n\nvar zeroPoint = {\n    x: 0,\n    y: 0,\n    z: 0\n};\nvar isNum = function (v) {\n    return typeof v === 'number';\n};\n\nvar combineFunctions = function (a, b) {\n    return function (v) {\n        return b(a(v));\n    };\n};\nvar pipe = function () {\n    var transformers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        transformers[_i] = arguments[_i];\n    }\n    return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n    if (isNum(origin)) {\n        return function (v) {\n            return mix(origin, target, v);\n        };\n    } else if (color.test(origin)) {\n        return mixColor(origin, target);\n    } else {\n        return mixComplex(origin, target);\n    }\n}\nvar mixArray = function (from, to) {\n    var output = __spreadArrays(from);\n    var numValues = output.length;\n    var blendValue = from.map(function (fromThis, i) {\n        return getMixer(fromThis, to[i]);\n    });\n    return function (v) {\n        for (var i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nvar mixObject = function (origin, target) {\n    var output = __assign(__assign({}, origin), target);\n    var blendValue = {};\n    for (var key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return function (v) {\n        for (var key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nfunction analyse(value) {\n    var parsed = complex.parse(value);\n    var numValues = parsed.length;\n    var numNumbers = 0;\n    var numRGB = 0;\n    var numHSL = 0;\n    for (var i = 0; i < numValues; i++) {\n        if (numNumbers || typeof parsed[i] === 'number') {\n            numNumbers++;\n        } else {\n            if (parsed[i].hue !== undefined) {\n                numHSL++;\n            } else {\n                numRGB++;\n            }\n        }\n    }\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\n}\nvar mixComplex = function (origin, target) {\n    var template = complex.createTransformer(target);\n    var originStats = analyse(origin);\n    var targetStats = analyse(target);\n    invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function (from, to) {\n    return function (p) {\n        return mix(from, to, p);\n    };\n};\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    } else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        } else {\n            return mixComplex;\n        }\n    } else if (Array.isArray(v)) {\n        return mixArray;\n    } else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    var mixers = [];\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\n    var numMixers = output.length - 1;\n    for (var i = 0; i < numMixers; i++) {\n        var mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate(_a, _b) {\n    var from = _a[0],\n        to = _a[1];\n    var mixer = _b[0];\n    return function (v) {\n        return mixer(progress(from, to, v));\n    };\n}\nfunction slowInterpolate(input, mixers) {\n    var inputLength = input.length;\n    var lastInputIndex = inputLength - 1;\n    return function (v) {\n        var mixerIndex = 0;\n        var foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        } else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            var i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.clamp,\n        isClamp = _c === void 0 ? true : _c,\n        ease = _b.ease,\n        mixer = _b.mixer;\n    var inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    var mixers = createMixers(output, ease, mixer);\n    var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n    return isClamp ? function (v) {\n        return interpolator(clamp(input[0], input[inputLength - 1], v));\n    } : interpolator;\n}\n\nvar reverseEasing = function (easing) {\n    return function (p) {\n        return 1 - easing(1 - p);\n    };\n};\nvar mirrorEasing = function (easing) {\n    return function (p) {\n        return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n    };\n};\nvar createExpoIn = function (power) {\n    return function (p) {\n        return Math.pow(p, power);\n    };\n};\nvar createBackIn = function (power) {\n    return function (p) {\n        return p * p * ((power + 1) * p - power);\n    };\n};\nvar createAnticipate = function (power) {\n    var backEasing = createBackIn(power);\n    return function (p) {\n        return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    };\n};\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\nvar BOUNCE_FIRST_THRESHOLD = 4.0 / 11.0;\nvar BOUNCE_SECOND_THRESHOLD = 8.0 / 11.0;\nvar BOUNCE_THIRD_THRESHOLD = 9.0 / 10.0;\nvar linear = function (p) {\n    return p;\n};\nvar easeIn = /*#__PURE__*/createExpoIn(2);\nvar easeOut = /*#__PURE__*/reverseEasing(easeIn);\nvar easeInOut = /*#__PURE__*/mirrorEasing(easeIn);\nvar circIn = function (p) {\n    return 1 - Math.sin(Math.acos(p));\n};\nvar circOut = /*#__PURE__*/reverseEasing(circIn);\nvar circInOut = /*#__PURE__*/mirrorEasing(circOut);\nvar backIn = /*#__PURE__*/createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = /*#__PURE__*/reverseEasing(backIn);\nvar backInOut = /*#__PURE__*/mirrorEasing(backIn);\nvar anticipate = /*#__PURE__*/createAnticipate(DEFAULT_OVERSHOOT_STRENGTH);\nvar ca = 4356.0 / 361.0;\nvar cb = 35442.0 / 1805.0;\nvar cc = 16061.0 / 1805.0;\nvar bounceOut = function (p) {\n    if (p === 1 || p === 0) return p;\n    var p2 = p * p;\n    return p < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p2 : p < BOUNCE_SECOND_THRESHOLD ? 9.075 * p2 - 9.9 * p + 3.4 : p < BOUNCE_THIRD_THRESHOLD ? ca * p2 - cb * p + cc : 10.8 * p * p - 20.52 * p + 10.72;\n};\nvar bounceIn = /*#__PURE__*/reverseEasing(bounceOut);\nvar bounceInOut = function (p) {\n    return p < 0.5 ? 0.5 * (1.0 - bounceOut(1.0 - p * 2.0)) : 0.5 * bounceOut(p * 2.0 - 1.0) + 0.5;\n};\n\nfunction defaultEasing(values, easing) {\n    return values.map(function () {\n        return easing || easeInOut;\n    }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    var numValues = values.length;\n    return values.map(function (_value, i) {\n        return i !== 0 ? i / (numValues - 1) : 0;\n    });\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map(function (o) {\n        return o * duration;\n    });\n}\nfunction keyframes(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.to,\n        to = _c === void 0 ? 1 : _c,\n        ease = _a.ease,\n        offset = _a.offset,\n        _d = _a.duration,\n        duration = _d === void 0 ? 300 : _d;\n    var state = { done: false, value: from };\n    var values = Array.isArray(to) ? to : [from, to];\n    var times = convertOffsetToTimes(offset !== null && offset !== void 0 ? offset : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n        });\n    }\n    var interpolator = createInterpolator();\n    return {\n        next: function (t) {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: function () {\n            values.reverse();\n            interpolator = createInterpolator();\n        }\n    };\n}\n\nfunction decay(_a) {\n    var _b = _a.velocity,\n        velocity = _b === void 0 ? 0 : _b,\n        _c = _a.from,\n        from = _c === void 0 ? 0 : _c,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 350 : _e,\n        _f = _a.restDelta,\n        restDelta = _f === void 0 ? 0.5 : _f,\n        modifyTarget = _a.modifyTarget;\n    var state = { done: false, value: from };\n    var amplitude = power * velocity;\n    var ideal = from + amplitude;\n    var target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    if (target !== ideal) amplitude = target - from;\n    return {\n        next: function (t) {\n            var delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: function () {}\n    };\n}\n\nvar types = { keyframes: keyframes, spring: spring, decay: decay };\nfunction detectAnimationFromOptions(config) {\n    if (Array.isArray(config.to)) {\n        return keyframes;\n    } else if (types[config.type]) {\n        return types[config.type];\n    }\n    var keys = new Set(Object.keys(config));\n    if (keys.has(\"ease\") || keys.has(\"duration\") && !keys.has(\"dampingRatio\")) {\n        return keyframes;\n    } else if (keys.has(\"dampingRatio\") || keys.has(\"stiffness\") || keys.has(\"mass\") || keys.has(\"damping\") || keys.has(\"restSpeed\") || keys.has(\"restDelta\")) {\n        return spring;\n    }\n    return keyframes;\n}\n\nfunction loopElapsed(elapsed, duration, delay) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration, delay, isForwardPlayback) {\n    if (delay === void 0) {\n        delay = 0;\n    }\n    if (isForwardPlayback === void 0) {\n        isForwardPlayback = true;\n    }\n    return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\n\nvar framesync = function (update) {\n    var passTimestamp = function (_a) {\n        var delta = _a.delta;\n        return update(delta);\n    };\n    return {\n        start: function () {\n            return sync.update(passTimestamp, true, true);\n        },\n        stop: function () {\n            return cancelSync.update(passTimestamp);\n        }\n    };\n};\nfunction animate(_a) {\n    var _b, _c;\n    var from = _a.from,\n        _d = _a.autoplay,\n        autoplay = _d === void 0 ? true : _d,\n        _e = _a.driver,\n        driver = _e === void 0 ? framesync : _e,\n        _f = _a.elapsed,\n        elapsed = _f === void 0 ? 0 : _f,\n        _g = _a.repeat,\n        repeatMax = _g === void 0 ? 0 : _g,\n        _h = _a.repeatType,\n        repeatType = _h === void 0 ? \"loop\" : _h,\n        _j = _a.repeatDelay,\n        repeatDelay = _j === void 0 ? 0 : _j,\n        onPlay = _a.onPlay,\n        onStop = _a.onStop,\n        onComplete = _a.onComplete,\n        onRepeat = _a.onRepeat,\n        onUpdate = _a.onUpdate,\n        options = __rest(_a, [\"from\", \"autoplay\", \"driver\", \"elapsed\", \"repeat\", \"repeatType\", \"repeatDelay\", \"onPlay\", \"onStop\", \"onComplete\", \"onRepeat\", \"onUpdate\"]);\n    var to = options.to;\n    var driverControls;\n    var repeatCount = 0;\n    var computedDuration = options.duration;\n    var latest;\n    var isComplete = false;\n    var isForwardPlayback = true;\n    var interpolateFromNumber;\n    var animator = detectAnimationFromOptions(options);\n    if ((_c = (_b = animator).needsInterpolation) === null || _c === void 0 ? void 0 : _c.call(_b, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false\n        });\n        from = 0;\n        to = 100;\n    }\n    var animation = animator(__assign(__assign({}, options), { from: from, to: to }));\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        } else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\") animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback) delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            var state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber) latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) computedDuration !== null && computedDuration !== void 0 ? computedDuration : computedDuration = elapsed;\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            } else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: function () {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        }\n    };\n}\n\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nfunction inertia(_a) {\n    var _b = _a.from,\n        from = _b === void 0 ? 0 : _b,\n        _c = _a.velocity,\n        velocity = _c === void 0 ? 0 : _c,\n        min = _a.min,\n        max = _a.max,\n        _d = _a.power,\n        power = _d === void 0 ? 0.8 : _d,\n        _e = _a.timeConstant,\n        timeConstant = _e === void 0 ? 750 : _e,\n        _f = _a.bounceStiffness,\n        bounceStiffness = _f === void 0 ? 500 : _f,\n        _g = _a.bounceDamping,\n        bounceDamping = _g === void 0 ? 10 : _g,\n        _h = _a.restDelta,\n        restDelta = _h === void 0 ? 1 : _h,\n        modifyTarget = _a.modifyTarget,\n        driver = _a.driver,\n        onUpdate = _a.onUpdate,\n        onComplete = _a.onComplete;\n    var currentAnimation;\n    function isOutOfBounds(v) {\n        return min !== undefined && v < min || max !== undefined && v > max;\n    }\n    function boundaryNearest(v) {\n        if (min === undefined) return max;\n        if (max === undefined) return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate(__assign(__assign({}, options), { driver: driver, onUpdate: function (v) {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            }, onComplete: onComplete }));\n    }\n    function startSpring(options) {\n        startAnimation(__assign({ type: \"spring\", stiffness: bounceStiffness, damping: bounceDamping, restDelta: restDelta }, options));\n    }\n    if (isOutOfBounds(from)) {\n        startSpring({ from: from, velocity: velocity, to: boundaryNearest(from) });\n    } else {\n        var target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\") target = modifyTarget(target);\n        var boundary_1 = boundaryNearest(target);\n        var heading_1 = boundary_1 === min ? -1 : 1;\n        var prev_1;\n        var current_1;\n        var checkBoundary = function (v) {\n            prev_1 = current_1;\n            current_1 = v;\n            velocity = velocityPerSecond(v - prev_1, getFrameData().delta);\n            if (heading_1 === 1 && v > boundary_1 || heading_1 === -1 && v < boundary_1) {\n                startSpring({ from: v, to: boundary_1, velocity: velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from: from,\n            velocity: velocity,\n            timeConstant: timeConstant,\n            power: power,\n            restDelta: restDelta,\n            modifyTarget: modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined\n        });\n    }\n    return {\n        stop: function () {\n            return currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        }\n    };\n}\n\nvar radiansToDegrees = function (radians) {\n    return radians * 180 / Math.PI;\n};\n\nvar angle = function (a, b) {\n    if (b === void 0) {\n        b = zeroPoint;\n    }\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function (from, to) {\n    var hasReceivedFrom = true;\n    if (to === undefined) {\n        to = from;\n        hasReceivedFrom = false;\n    }\n    return function (v) {\n        if (hasReceivedFrom) {\n            return v - from + to;\n        } else {\n            from = v;\n            hasReceivedFrom = true;\n            return to;\n        }\n    };\n};\n\nvar identity = function (v) {\n    return v;\n};\nvar createAttractor = function (alterDisplacement) {\n    if (alterDisplacement === void 0) {\n        alterDisplacement = identity;\n    }\n    return function (constant, origin, v) {\n        var displacement = origin - v;\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n        return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n    };\n};\nvar attract = /*#__PURE__*/createAttractor();\nvar attractExpo = /*#__PURE__*/createAttractor(Math.sqrt);\n\nvar degreesToRadians = function (degrees) {\n    return degrees * Math.PI / 180;\n};\n\nvar isPoint = function (point) {\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function (point) {\n    return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function (a, b) {\n    return Math.abs(a - b);\n};\nfunction distance(a, b) {\n    if (isNum(a) && isNum(b)) {\n        return distance1D(a, b);\n    } else if (isPoint(a) && isPoint(b)) {\n        var xDelta = distance1D(a.x, b.x);\n        var yDelta = distance1D(a.y, b.y);\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n    }\n}\n\nvar pointFromVector = function (origin, angle, distance) {\n    angle = degreesToRadians(angle);\n    return {\n        x: distance * Math.cos(angle) + origin.x,\n        y: distance * Math.sin(angle) + origin.y\n    };\n};\n\nvar toDecimal = function (num, precision) {\n    if (precision === void 0) {\n        precision = 2;\n    }\n    precision = Math.pow(10, precision);\n    return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function (prevValue, nextValue, duration, smoothing) {\n    if (smoothing === void 0) {\n        smoothing = 0;\n    }\n    return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function (strength) {\n    if (strength === void 0) {\n        strength = 50;\n    }\n    var previousValue = 0;\n    var lastUpdated = 0;\n    return function (v) {\n        var currentFramestamp = getFrameData().timestamp;\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n        var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n        lastUpdated = currentFramestamp;\n        previousValue = newValue;\n        return newValue;\n    };\n};\n\nvar snap = function (points) {\n    if (typeof points === 'number') {\n        return function (v) {\n            return Math.round(v / points) * points;\n        };\n    } else {\n        var i_1 = 0;\n        var numPoints_1 = points.length;\n        return function (v) {\n            var lastDistance = Math.abs(points[0] - v);\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n                var point = points[i_1];\n                var distance = Math.abs(point - v);\n                if (distance === 0) return point;\n                if (distance > lastDistance) return points[i_1 - 1];\n                if (i_1 === numPoints_1 - 1) return point;\n                lastDistance = distance;\n            }\n        };\n    }\n};\n\nfunction velocityPerFrame(xps, frameDuration) {\n    return xps / (1000 / frameDuration);\n}\n\nvar wrap = function (min, max, v) {\n    var rangeSize = max - min;\n    return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar a = function (a1, a2) {\n    return 1.0 - 3.0 * a2 + 3.0 * a1;\n};\nvar b = function (a1, a2) {\n    return 3.0 * a2 - 6.0 * a1;\n};\nvar c = function (a1) {\n    return 3.0 * a1;\n};\nvar calcBezier = function (t, a1, a2) {\n    return ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\n};\nvar getSlope = function (t, a1, a2) {\n    return 3.0 * a(a1, a2) * t * t + 2.0 * b(a1, a2) * t + c(a1);\n};\nvar subdivisionPrecision = 0.0000001;\nvar subdivisionMaxIterations = 10;\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n        currentT = aA + (aB - aA) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - aX;\n        if (currentX > 0.0) {\n            aB = currentT;\n        } else {\n            aA = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision && ++i < subdivisionMaxIterations);\n    return currentT;\n}\nvar newtonIterations = 8;\nvar newtonMinSlope = 0.001;\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < newtonIterations; ++i) {\n        var currentSlope = getSlope(aGuessT, mX1, mX2);\n        if (currentSlope === 0.0) {\n            return aGuessT;\n        }\n        var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n        aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n}\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    if (mX1 === mY1 && mX2 === mY2) return linear;\n    var sampleValues = new Float32Array(kSplineTableSize);\n    for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n    function getTForX(aX) {\n        var intervalStart = 0.0;\n        var currentSample = 1;\n        var lastSample = kSplineTableSize - 1;\n        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n            intervalStart += kSampleStepSize;\n        }\n        --currentSample;\n        var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n        var guessForT = intervalStart + dist * kSampleStepSize;\n        var initialSlope = getSlope(guessForT, mX1, mX2);\n        if (initialSlope >= newtonMinSlope) {\n            return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n        } else if (initialSlope === 0.0) {\n            return guessForT;\n        } else {\n            return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n        }\n    }\n    return function (t) {\n        return t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n    };\n}\n\nvar steps = function (steps, direction) {\n    if (direction === void 0) {\n        direction = 'end';\n    }\n    return function (progress) {\n        progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n        var expanded = progress * steps;\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n        return clamp(0, 1, rounded / steps);\n    };\n};\n\nexport { angle, animate, anticipate, applyOffset, attract, attractExpo, backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, clamp, createAnticipate, createAttractor, createBackIn, createExpoIn, cubicBezier, decay, degreesToRadians, distance, easeIn, easeInOut, easeOut, inertia, interpolate, isPoint, isPoint3D, keyframes, linear, mirrorEasing, mix, mixColor, mixComplex, pipe, pointFromVector, progress, radiansToDegrees, reverseEasing, smooth, smoothFrame, snap, spring, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap };\n"]},"metadata":{},"sourceType":"module"}